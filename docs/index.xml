<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on mhlee</title>
    <link>https://mhlee21.github.io/docs/</link>
    <description>Recent content in Docs on mhlee</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Fri, 11 Mar 2022 09:04:34 +0000</lastBuildDate><atom:link href="https://mhlee21.github.io/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>git branch</title>
      <link>https://mhlee21.github.io/docs/Git/git-branch/</link>
      <pubDate>Fri, 11 Mar 2022 09:04:34 +0000</pubDate>
      
      <guid>https://mhlee21.github.io/docs/Git/git-branch/</guid>
      <description>Branch # Git에서 Branch라는 개념은 매우 중요합니다.
사실상 버전 관리의 꽃이라고 할 수 있습니다.
https://git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell
나뭇가지처럼 여러 갈래로 작업 공간을 나누어 독립적으로 작업할 수 있도록 도와주는 Git의 도구 개발을 하다 보면 코드를 여러 개로 복사해야 하는 일이 자주 생기는데, 코드를 통째로 복사하고 나서 원래 코드와는 상관없이 독립적으로 개발을 진행할 수 있도록 도움 장점
독립 공간을 형성하기 때문에 원본(master)에 대해 안전 하나의 작업은 하나의 브랜치로 나누어 진행되므로 체계적인 개발이 가능 특히나 Git의 브랜치는 매우 가벼우며 순식간에 브랜치를 새로 만들고 브랜치 사이를 이동할 수 있음 브랜치를 꼭 써야할까?</description>
    </item>
    
    <item>
      <title>Git &amp; Github</title>
      <link>https://mhlee21.github.io/docs/Git/git/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://mhlee21.github.io/docs/Git/git/</guid>
      <description>Why Git &amp;amp; Github? # 1. Git을 이용한 버전 관리 # git : (분산) 버전 관리 프로그램
버전 : 컴퓨터 소프트웨어의 특정 상태 관리 : 어떤 일의 사무, 시설이나 물건의 유지/개량 프로그램 : 컴퓨터에서 실행될 때 특정 작업을 수행하는 일련의 명령어들의 모음 중앙 집중식 버전 관리
분산 버전 관리
2. Github 를 이용한 포트폴리오 # TIL Git # git 은 분산버전관리시스템(DVCS) Distributed Control System
소스코드의 버전을 관리하고 이력도 관리할 수 있다.</description>
    </item>
    
  </channel>
</rss>
